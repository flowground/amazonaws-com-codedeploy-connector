{
    "name": "amazonaws-com-codedeploy-connector",
    "version": "2014.0.0",
    "description": "AWS CodeDeploy AWS CodeDeploy is a deployment service that automates application\ndeployments to Amazon EC2 instances, on-premises instances running in your own\nfacility, serverless AWS Lambda functions, or applications in an Amazon ECS\nservice.\n\nYou can deploy a nearly unlimited variety of application content, such as an\nupdated Lambda function, updated applications in an Amazon ECS service, code,\nweb and configuration files, executables, packages, scripts, multimedia files,\nand so on. AWS CodeDeploy can deploy application content stored in Amazon S3\nbuckets, GitHub repositories, or Bitbucket repositories. You do not need to make\nchanges to your existing code before you can use AWS CodeDeploy.\n\nAWS CodeDeploy makes it easier for you to rapidly release new features, helps\nyou avoid downtime during application deployment, and handles the complexity of\nupdating your applications, without many of the risks associated with\nerror-prone manual deployments.\n\n AWS CodeDeploy Components \n\nUse the information in this guide to help you work with the following AWS\nCodeDeploy components:\n\n *   Application: A name that uniquely identifies the application you want to\n   deploy. AWS CodeDeploy uses this name, which functions as a container, to\n   ensure the correct combination of revision, deployment configuration, and\n   deployment group are referenced during a deployment.\n   \n   \n *   Deployment group: A set of individual instances, CodeDeploy Lambda\n   deployment configuration settings, or an Amazon ECS service and network\n   details. A Lambda deployment group specifies how to route traffic to a new\n   version of a Lambda function. An Amazon ECS deployment group specifies the\n   service created in Amazon ECS to deploy, a load balancer, and a listener to\n   reroute production traffic to an updated containerized application. An\n   EC2/On-premises deployment group contains individually tagged instances,\n   Amazon EC2 instances in Amazon EC2 Auto Scaling groups, or both. All\n   deployment groups can specify optional trigger, alarm, and rollback settings.\n   \n   \n *   Deployment configuration: A set of deployment rules and deployment success\n   and failure conditions used by AWS CodeDeploy during a deployment.\n   \n   \n *   Deployment: The process and the components used when updating a Lambda\n   function, a containerized application in an Amazon ECS service, or of\n   installing content on one or more instances. \n   \n   \n *   Application revisions: For an AWS Lambda deployment, this is an AppSpec file\n   that specifies the Lambda function to be updated and one or more functions to\n   validate deployment lifecycle events. For an Amazon ECS deployment, this is\n   an AppSpec file that specifies the Amazon ECS task definition, container, and\n   port where production traffic is rerouted. For an EC2/On-premises deployment,\n   this is an archive file that contains source content—source code, webpages,\n   executable files, and deployment scripts—along with an AppSpec file.\n   Revisions are stored in Amazon S3 buckets or GitHub repositories. For Amazon\n   S3, a revision is uniquely identified by its Amazon S3 object key and its\n   ETag, version, or both. For GitHub, a revision is uniquely identified by its\n   commit ID.\n   \n   \n\nThis guide also contains information to help you get details about the instances\nin your deployments, to make on-premises instances available for AWS CodeDeploy\ndeployments, to get details about a Lambda function deployment, and to get\ndetails about Amazon ECS service deployments.\n\n AWS CodeDeploy Information Resources \n\n *   AWS CodeDeploy User Guide\n   [https://docs.aws.amazon.com/codedeploy/latest/userguide] \n   \n   \n *   AWS CodeDeploy API Reference Guide\n   [https://docs.aws.amazon.com/codedeploy/latest/APIReference/] \n   \n   \n *   AWS CLI Reference for AWS CodeDeploy\n   [https://docs.aws.amazon.com/cli/latest/reference/deploy/index.html] \n   \n   \n *   AWS CodeDeploy Developer Forum\n   [https://forums.aws.amazon.com/forum.jspa?forumID=179]",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}