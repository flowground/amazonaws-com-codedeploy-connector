{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Represents the input of a CreateDeployment operation.",
            "properties": {
                "applicationName": {
                    "description": "The name of an AWS CodeDeploy application associated with the IAM user or AWS account.",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "autoRollbackConfiguration": {
                    "description": "Configuration information for an automatic rollback that is added when a deployment is created.",
                    "properties": {
                        "enabled": {
                            "description": "Indicates whether a defined automatic rollback configuration is currently enabled.",
                            "type": "boolean"
                        },
                        "events": {
                            "description": "The event type or types that trigger a rollback.",
                            "items": {
                                "enum": [
                                    "DEPLOYMENT_FAILURE",
                                    "DEPLOYMENT_STOP_ON_ALARM",
                                    "DEPLOYMENT_STOP_ON_REQUEST"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "deploymentConfigName": {
                    "description": "<p>The name of a deployment configuration associated with the IAM user or AWS account.</p> <p>If not specified, the value configured in the deployment group is used as the default. If the deployment group does not have a deployment configuration associated with it, CodeDeployDefault.OneAtATime is used by default.</p>",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "deploymentGroupName": {
                    "description": "The name of the deployment group.",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "description": {
                    "description": "A comment about the deployment.",
                    "type": "string"
                },
                "fileExistsBehavior": {
                    "description": "<p>Information about how AWS CodeDeploy handles files that already exist in a deployment target location but weren't part of the previous successful deployment.</p> <p>The fileExistsBehavior parameter takes any of the following values:</p> <ul> <li> <p>DISALLOW: The deployment fails. This is also the default behavior if no option is specified.</p> </li> <li> <p>OVERWRITE: The version of the file from the application revision currently being deployed replaces the version already on the instance.</p> </li> <li> <p>RETAIN: The version of the file already on the instance is kept and used as part of the new deployment.</p> </li> </ul>",
                    "enum": [
                        "DISALLOW",
                        "OVERWRITE",
                        "RETAIN"
                    ],
                    "type": "string"
                },
                "ignoreApplicationStopFailures": {
                    "description": "<p> If true, then if an ApplicationStop, BeforeBlockTraffic, or AfterBlockTraffic deployment lifecycle event to an instance fails, then the deployment continues to the next deployment lifecycle event. For example, if ApplicationStop fails, the deployment continues with DownloadBundle. If BeforeBlockTraffic fails, the deployment continues with BlockTraffic. If AfterBlockTraffic fails, the deployment continues with ApplicationStop. </p> <p> If false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, then a deployment to the next instance is attempted. </p> <p> During a deployment, the AWS CodeDeploy agent runs the scripts specified for ApplicationStop, BeforeBlockTraffic, and AfterBlockTraffic in the AppSpec file from the previous successful deployment. (All other scripts are run from the AppSpec file in the current deployment.) If one of these scripts contains an error and does not run successfully, the deployment can fail. </p> <p> If the cause of the failure is a script from the last successful deployment that will never run successfully, create a new deployment and use <code>ignoreApplicationStopFailures</code> to specify that the ApplicationStop, BeforeBlockTraffic, and AfterBlockTraffic failures should be ignored. </p>",
                    "type": "boolean"
                },
                "revision": {
                    "description": " The type and location of the revision to deploy. ",
                    "properties": {
                        "appSpecContent": {
                            "description": " The content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML and stored as a RawString. ",
                            "properties": {
                                "content": {
                                    "description": "<p> The YAML-formatted or JSON-formatted revision string. </p> <p> For an AWS Lambda deployment, the content includes a Lambda function name, the alias for its original version, and the alias for its replacement version. The deployment shifts traffic from the original version of the Lambda function to the replacement version. </p> <p> For an Amazon ECS deployment, the content includes the task name, information about the load balancer that serves traffic to the container, and more. </p> <p> For both types of deployments, the content can specify Lambda functions that run at specified hooks, such as <code>BeforeInstall</code>, during a deployment. </p>",
                                    "type": "string"
                                },
                                "sha256": {
                                    "description": " The SHA256 hash value of the revision content. ",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "gitHubLocation": {
                            "description": "Information about the location of application artifacts stored in GitHub.",
                            "properties": {
                                "commitId": {
                                    "description": "The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision.",
                                    "type": "string"
                                },
                                "repository": {
                                    "description": "<p>The GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision. </p> <p>Specified as account/repository.</p>",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "revisionType": {
                            "description": "<p>The type of application revision:</p> <ul> <li> <p>S3: An application revision stored in Amazon S3.</p> </li> <li> <p>GitHub: An application revision stored in GitHub (EC2/On-premises deployments only).</p> </li> <li> <p>String: A YAML-formatted or JSON-formatted string (AWS Lambda deployments only).</p> </li> </ul>",
                            "enum": [
                                "S3",
                                "GitHub",
                                "String",
                                "AppSpecContent"
                            ],
                            "type": "string"
                        },
                        "s3Location": {
                            "description": "Information about the location of a revision stored in Amazon S3. ",
                            "properties": {
                                "bucket": {
                                    "description": "The name of the Amazon S3 bucket where the application revision is stored.",
                                    "type": "string"
                                },
                                "bundleType": {
                                    "description": "<p>The file type of the application revision. Must be one of the following:</p> <ul> <li> <p>tar: A tar archive file.</p> </li> <li> <p>tgz: A compressed tar archive file.</p> </li> <li> <p>zip: A zip archive file.</p> </li> </ul>",
                                    "enum": [
                                        "tar",
                                        "tgz",
                                        "zip",
                                        "YAML",
                                        "JSON"
                                    ],
                                    "type": "string"
                                },
                                "eTag": {
                                    "description": "<p>The ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.</p> <p>If the ETag is not specified as an input parameter, ETag validation of the object is skipped.</p>",
                                    "type": "string"
                                },
                                "key": {
                                    "description": "The name of the Amazon S3 object that represents the bundled artifacts for the application revision.",
                                    "type": "string"
                                },
                                "version": {
                                    "description": "<p>A specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.</p> <p>If the version is not specified, the system uses the most recent version by default.</p>",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "string": {
                            "description": "Information about the location of an AWS Lambda deployment revision stored as a RawString.",
                            "properties": {
                                "content": {
                                    "description": "The YAML-formatted or JSON-formatted revision string. It includes information about which Lambda function to update and optional Lambda functions that validate deployment lifecycle events.",
                                    "type": "string"
                                },
                                "sha256": {
                                    "description": "The SHA256 hash value of the revision content.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "targetInstances": {
                    "description": " Information about the instances that belong to the replacement environment in a blue/green deployment. ",
                    "properties": {
                        "autoScalingGroups": {
                            "description": "The names of one or more Auto Scaling groups to identify a replacement environment for a blue/green deployment.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "ec2TagSet": {
                            "description": "Information about the groups of EC2 instance tags that an instance must be identified by in order for it to be included in the replacement environment for a blue/green deployment. Cannot be used in the same call as tagFilters.",
                            "properties": {
                                "ec2TagSetList": {
                                    "description": "A list that contains other lists of EC2 instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.",
                                    "items": {
                                        "items": {
                                            "description": "Information about an EC2 tag filter.",
                                            "properties": {
                                                "Key": {
                                                    "description": "The tag filter key.",
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "description": "<p>The tag filter type:</p> <ul> <li> <p>KEY_ONLY: Key only.</p> </li> <li> <p>VALUE_ONLY: Value only.</p> </li> <li> <p>KEY_AND_VALUE: Key and value.</p> </li> </ul>",
                                                    "enum": [
                                                        "KEY_ONLY",
                                                        "VALUE_ONLY",
                                                        "KEY_AND_VALUE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The tag filter value.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "tagFilters": {
                            "description": "The tag filter key, type, and value used to identify Amazon EC2 instances in a replacement environment for a blue/green deployment. Cannot be used in the same call as ec2TagSet.",
                            "items": {
                                "description": "Information about an EC2 tag filter.",
                                "properties": {
                                    "Key": {
                                        "description": "The tag filter key.",
                                        "type": "string"
                                    },
                                    "Type": {
                                        "description": "<p>The tag filter type:</p> <ul> <li> <p>KEY_ONLY: Key only.</p> </li> <li> <p>VALUE_ONLY: Value only.</p> </li> <li> <p>KEY_AND_VALUE: Key and value.</p> </li> </ul>",
                                        "enum": [
                                            "KEY_ONLY",
                                            "VALUE_ONLY",
                                            "KEY_AND_VALUE"
                                        ],
                                        "type": "string"
                                    },
                                    "Value": {
                                        "description": "The tag filter value.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "updateOutdatedInstancesOnly": {
                    "description": " Indicates whether to deploy to all instances or only to instances that are not running the latest application revision. ",
                    "type": "boolean"
                }
            },
            "required": [
                "applicationName"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}